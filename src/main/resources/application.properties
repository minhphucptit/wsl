server.port=8080
spring.application.name=wholesale-service
eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER_URL}

spring.datasource.url=${DB_URI}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# Only test
#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false

#blockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath.
# It will be used by default. As Spring Cloud Ribbon is in maintenance mode.
# We recommend switching to BlockingLoadBalancerClient instead.
#In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or
# remove spring-cloud-starter-netflix-ribbon from your project.
spring.cloud.loadbalancer.ribbon.enabled=false

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=${HIBERNATE_DIALECT}
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = validate

logging.level.org.hibernate = ERROR
spring.jpa.show-sql=true
ceti.service.zoneId=${SERVICE_ZONE_ID}

opentracing.jaeger.udp-sender.host=${JAEGER_HOST:localhost}
opentracing.jaeger.udp-sender.port=${JAEGER_PORT:6831}	
opentracing.jaeger.log-spans = false
mybatis.mapper-locations=classpath*:**/xml_query/*.xml
logging.level.com.ceti.wholesale.mapper=TRACE


## LOCAL
#server.port=8080
#spring.application.name=wholesale-service
#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false
##eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER_URL}
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#spring.datasource.url=jdbc:sqlserver://123.25.15.73:14444;databaseName=wholesale
##jdbc:mysql://localhost:3306/ceti_dev?allowPublicKeyRetrieval=true&useSSL=false
#spring.datasource.username=sa
##root
#spring.datasource.password=ceti@1234
##1234
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
##blockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath.
## It will be used by default. As Spring Cloud Ribbon is in maintenance mode.
## We recommend switching to BlockingLoadBalancerClient instead.
##In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or
## remove spring-cloud-starter-netflix-ribbon from your project.
#spring.cloud.loadbalancer.ribbon.enabled=false
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = validate
#
#mybatis.mapper-locations=classpath*:**/xml_query/*.xml
#logging.level.org.hibernate = ERROR
#spring.jpa.show-sql=true
#ceti.service.zoneId=Asia/Ho_Chi_Minh
#logging.level.com.ceti.wholesale.mapper=TRACE
